non overlapping:
module Seqdet(seq, count);
input [15:0] seq;
output [4:0] count;
reg [4:0] count1;
integer i;
always@(seq)
begin
 count1 = 0;
 for(i=0;i<16;i=i+1)
 if((seq[i] == 1'b1) && (seq[i+1] == 1'b1) && (seq[i+2] == 1'b0) )
 count1= count1 + 1;
end
assign count=count1;
endmodule

101:
module fsm_101(input x,rst,clk,output reg y);
reg [3:0]state;
parameter s0=2'b00,s1='b01,s2=2'b10;
always@(posedge clk)
begin
if(rst==0)
state=s0;
else
begin
case(state)
s0 :begin
if(x==0)
state=s1;
else

state=s0;
end
s1:begin
if(x==0)
state=s2;
else
state=s1;
end

s2:begin
if(x==1)
state=s0;
else
state=s0;
end
endcase
end
end
always@(*)
begin
if(rst==0)
y=0;
else
begin
case(state)
s0:y=0;
s1:y=0;
s2:begin
if(x==0)
y=0;
else
y=1;
end
endcase
end
end
endmodule
